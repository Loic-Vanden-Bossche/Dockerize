version: "3.9"
services:
  frontend:
    container_name: frontend
    build:
      context: ./packages/frontend
      dockerfile: Dockerfile.local
    restart: always
    env_file: .env
    ports:
      - "${FRONTEND_PORT}:${FRONTEND_PORT}"
    volumes:
      - ./packages/frontend:/usr/src/app
      - /usr/src/app/node_modules/
    networks:
      - bp-network
    command: "npm start"
  backend:
    container_name: backend
    build:
      context: ./packages/backend
      dockerfile: Dockerfile.local
    restart: always
    env_file: .env
    volumes:
      - ./packages/backend:/svr/app
      - /svr/app/node_modules/
      - "./scripts/wait.sh:/wait.sh"
    networks:
      - bp-network
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    depends_on:
      - database
    links:
      - database
  database:
    image: postgres:12-alpine
    restart: always
    container_name: database
    env_file:
      - .env
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      PGDATA: /var/lib/postgresql/data
      POSTGRES_USER: ${DB_USER}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "${DB_PORT}:${DB_PORT}"
    volumes:
      - ./db/data:/var/lib/postgresql/data
    networks:
      - bp-network

  database_test:
    image: postgres:12-alpine
    restart: always
    container_name: database_test
    env_file:
      - .env
    environment:
      POSTGRES_PASSWORD: ${DB_TEST_PASSWORD}
      PGDATA: /var/lib/postgresql/data_test
      POSTGRES_USER: ${DB_TEST_USER}
      POSTGRES_DB: dockerize_test
    ports:
      - "${DB_TEST_PORT}:5432"
    volumes:
      - ./db/data_test:/var/lib/postgresql/data_test
    networks:
      - bp-network
  pgadmin-portal:
    image: dpage/pgadmin4
    restart: always
    container_name: pgadmin-portal
    env_file:
      - .env
    environment:
      PGADMIN_DEFAULT_PASSWORD: "${PGADMIN_DEFAULT_PASSWORD}"
      PGADMIN_DEFAULT_EMAIL: "${PGADMIN_DEFAULT_EMAIL}"
    volumes:
      - ./db/admin:/root/.pgadmin
    ports:
      - "${PGADMIN_PORT}:80"
    depends_on:
      - database
    networks:
      - bp-network
networks:
  bp-network:
    driver: bridge
